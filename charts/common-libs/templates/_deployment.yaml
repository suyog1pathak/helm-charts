{{- define "common-libs.deployment" -}}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "common-libs.name" . }}
  labels:
    {{- with .Values.extraLabels }}
     {{ toYaml . | nindent 4}}
    {{- end }}  
    {{- include "common-libs.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  revisionHistoryLimit: 2
  strategy:
  {{- if eq .Values.strategy.type "canary"}}
    canary:
      # analysis:
      #   templates:
      #   - templateName: {{ include "common-libs.name" . }}-analysistemplate    
      stableMetadata:
        labels:
          role: stable
      canaryMetadata:
        labels:
          role: canary      
      canaryService: {{ include "common-libs.name" . }}-preview
      stableService: {{ include "common-libs.name" . }}-stable
      trafficRouting:
        alb:
          ingress: {{ include "common-libs.name" . }}
          servicePort: {{ .Values.service.port }}
      {{- with .Values.strategy.canarySteps }}
        {{- toYaml . | nindent 6 }}
      {{- end }}      
  {{- end }}

  {{- if eq .Values.strategy.type "rolling-update"}}
    canary:
      maxSurge: 1
      maxUnavailable: 1  
  {{- end }} 

  {{- if eq .Values.strategy.type "blueGreen"}}
    blueGreen: 
      activeService: {{ include "common-libs.name" . }}-stable
      previewService: {{ include "common-libs.name" . }}-preview
      autoPromotionEnabled: true
      postPromotionAnalysis: 
        templates:
          - templateName: {{ include "common-libs.name" . }}-analysistemplate
      scaleDownDelaySeconds: 110
  {{- end }}

  selector:
    matchLabels:
      {{- include "common-libs.labels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "common-libs.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}   
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.urlPrefix }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.container.volumesMounts }}
          volumeMounts:
          {{- range .Values.container.volumesMounts }}
            {{- with . }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
          {{- end }} 
          {{- end }}
          {{- if .Values.container.portExposed}}           
          ports:
          - containerPort: {{ .Values.container.portExposed }}
          {{- end }}
          {{- if .Values.container.envVars }}
          env:

          {{- if .Values.container.datadogVars }}
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/env']
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_TRACE_STARTUP_LOGS
            value: "true"  
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/name']  
          {{- end }}
          
          {{- range .Values.container.envVars }}
            {{- with . }}
          - name: {{ .name }}
            value: {{ .value }}
            {{- end }}   
          {{- end }}
          {{- end }}
          {{- if .Values.container.args }}
          args:
            {{- range .Values.container.args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}     

          {{- if .Values.livenessProbe }}
          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.readinessProbe }}
          readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}                    

          {{- if .Values.startupProbe }}
          startupProbe:
          {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}  

      {{- if .Values.container.volumes }}      

      volumes:
      {{- range .Values.container.volumes }}
        {{- with . }}
        - name: {{ .name }}

          {{ if .emptyDir }}
          emptyDir: {}
          {{- end }}            
          {{ if .hostPath }}
          hostPath:
            path: {{ .hostPath.path }}
          {{- end }}
          {{ if .configMap }}
          configMap:
            name: {{ .configMap.name }}
          {{- end }}
        
        {{- end }}
      {{- end }}

      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
         
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}      